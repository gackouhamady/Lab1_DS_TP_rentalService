name: Java CI

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - main
#### Just  example
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin' # Specify the Java distribution

      # Ensure gradlew has execute permissions
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the project
      - name: Build the project
        run: ./gradlew build

      # Run tests
      - name: Run tests
        run: ./gradlew test

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-java-app .


      # Run Docker container
      - name: Run Docker container
        run: |
          docker run -d --name my-java-app-container my-java-app
          sleep 5  # Attendre quelques secondes pour que le conteneur démarre correctement
          docker ps  # Vérifier que le conteneur est en cours d'exécution

      # Optionally, run tests inside Docker container
      - name: Run tests in Docker container
        run: |
          docker exec my-java-app-container /app/gradlew test
      

        # Stop and remove the container
      - name: Stop and remove Docker container
        run: |
          docker stop my-java-app-container
          docker rm my-java-app-container
